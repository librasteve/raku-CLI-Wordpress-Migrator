#!/usr/bin/env raku
use v6.d;

use DateTime::Format;
use CLI::Wordpress::Migrator;
use CLI::Wordpress::Migrator::Export;
use CLI::Wordpress::Migrator::Install;
use CLI::Wordpress::Migrator::Import;
use CLI::Wordpress::Migrator::SearchReplace;

my $now = strftime('%Y%m%d-%H-%M-%S', DateTime.now);

enum Command <connect export install import search-replace migrate>;

sub MAIN(
    Command $cmd,                   #= One of <connect export install import search-replace migrate>
    Str    :$ts,                    #= Enter timestamp of files [Str] eg. --ts='20241025-17-02-42'
    Bool   :$backup-only,           #= Only perform remote backup
    Bool   :$download-only,         #= Only perform download (requires timestamp [--ts])
    Bool   :$upload-only,           #= Only perform upload (requires timestamp [--ts])
    Bool   :$restore-only,          #= Only perform restore (requires timestamp [--ts])
    Bool   :$cleanup-only,          #= Only perform remote cleanup
    Bool   :$dry-run,               #= Do not perform replace
         ) {
    say $cmd;

    given $cmd {
        #| same names for export and import
        my $timestamp = $ts // $now;

        when 'connect' {
            say "Testing remote connection";
            say "------";

            my $server = Server.new: :name<from>;
            my $export = Export.new: :$server, :$timestamp;

            $export.connect;
            say "Remote connection test done!";
        }

        when 'export' {
            say "Using timestamp: $timestamp";
            say "This can take a few mins, please be patient";
            say "------";

            my $server = Server.new: :name<from>;
            my $export = Export.new: :$server, :$timestamp;

            if $backup-only {
                $export.backup;
                say "Remote backup done!";
            } elsif $download-only {
                if $ts {
                    $export.download;
                    say "File download done!";
                } else {
                    die "Need --ts=[timestamp] if download-only";
                }
            } elsif $cleanup-only {
                $export.cleanup;
                say "Remote cleanup done!";
            } else {
                $export.all;
                say "Export all done!";
            }
        }

        when 'install' {
            say "This can take a few mins, please be patient";
            say "------";

            my $server    = Server.new: :name<to>;
            my $wp-config = WP-Config.new;
            my $install   = Install.new: :$server, :$wp-config;

            $install.all;
            say "Install new done!";
        }

        when 'import' {
            die "Need --ts=[timestamp]" unless $ts;

            say "Using timestamp: $timestamp";
            say "This can take a few mins, please be patient";
            say "------";

            my $server = Server.new: :name<to>;
            my $import = Import.new: :$server, :$timestamp;

            if $upload-only {
                $import.upload;
                say "File upload done!";
            } elsif $restore-only {
                $import.restore;
                say "Restore done!";
            } elsif $cleanup-only {
                $import.cleanup;
                say "Remote cleanup done!";
            } else {
                $import.all;
                say "Import all done!";
            }
        }

        when 'search-replace' {
            say "------";

            my $from = Server.new: :name<from>;
            my $to   = Server.new: :name<to>;
            my $sr   = SearchReplace.new: :$from, :$to, :$dry-run;

            $sr.all;
            say "Search and Destroy done!";
        }

        when 'migrate' {
            say "Using timestamp: $timestamp";
            say "This can take a few mins, please be patient";
            say "------";

            my $from = Server.new: :name<from>;
            my $to   = Server.new: :name<to>;
            my $wp-config = WP-Config.new;

            my $export = Export.new: server => $from, :$timestamp;
            $export.all;

            my $install   = Install.new: server => $to, :$wp-config;
            $install.all;

            my $import = Import.new: server => $to, :$timestamp;
            $import.all;

            my $sr   = SearchReplace.new: :$from, :$to, :$dry-run;
            $sr.all;

            say "Migration completed!";
        }
    }

    say '...phew';
}




